#+title: Gentoo Speedrun

* Gentoo Install xfs%

I will try to follow handbook as much as possible. Haven't read it
in a long time

* Checking that everything is OK

Check that drives are there :-)
#+BEGIN_SRC bash
lsblk -f
#+END_SRC

Check network connection
#+begin_src  bash
ping gentoo.org
#+end_src

Check efivars
#+begin_src bash
ls /sys/firmware/efi/efivars
#+end_src

* Start using tmux

Launch tmux
#+begin_src bash
sudo su -
tmux
#+end_src

- use [ ctrl-b + % ] to make a vertical split
- use [ ctrl-b + arrows ] to switch panes
- use [ ctrl-b + c] to make a new window
- use [ ctrl-b + 0-9 ] to switch windows
- use [ ctrl-b + d ] to detach

Create 3 windows from the beginning

* Format the drives

I will use layout from the handbook for EFI GPT setup.
3 partitions consisting of efi partition (fat32), swap partition
(I will allocate only 1gb for swap just as example), rootfs partition (xfs)

Creating a new disklabel
#+begin_src bash
echo 'label: gpt' | sfdisk /dev/vda
#+end_src

Creating partitions
#+begin_src bash
echo -e ',256M,uefi,*\n,1G,swap\n,+,"linux root x86-64"' | sfdisk /dev/vda
#+end_src

* Filesystems

#+begin_src bash
mkfs.fat -F32 /dev/vda1
mkswap /dev/vda2
mkfs.xfs /dev/vda3
#+end_src

Mount rootfs partition
#+begin_src bash
mount /dev/vda3 /mnt/gentoo
#+end_src

* Getting stage3

All done in 1st tmux window

Download stage3
I will use default systemd merged-usr here
#+begin_src bash
cd /mnt/gentoo
links ftp.lysator.liu.se/gentoo
#+end_src

Installing stage3
#+begin_src bash
tar xpf stage3-*.tar.xz --xattrs-include='*.*' --numeric-owner
#+end_src

* Chrooting

In the 2nd tmux window prepare repos.conf.
Set rsync mirror to rsync://rsync2.ru.gentoo.org/gentoo-portage/.
Set dist repositories.
#+begin_src bash
echo 'GENTOO_MIRRORS="https://ftp.lysator.liu.se/gentoo/' >> /etc/portage/make.conf
#+end_src

In the 1st tmux window do an arch-chroot.
#+begin_src bash
cp /etc/resolv.conf ./etc
arch-chroot .
#+end_src

Mount EFI partition. (1st window)
#+begin_src bash
mkdir /efi
mount /dev/vda1 /efi
cd /etc/portage
#+end_src

In the 2nd tmux window do regular chroot.
#+begin_src bash
chroot .
cd /etc/portage
#+end_src

* Syncing repositories

Syncing repositories and emerging firmware
#+begin_src bash
echo 'sys-kernel/linux-firmware linux-fw-redistributable' > ./package.license
emerge-webrsync && getuto && emerge linux-firmware
#+end_src

* Setting locales

Generate locales
#+begin_src bash
echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen
locale-gen
#+end_src

Set locale to en_US.UTF-E
#+begin_src bash
eselect locale set <N>
#+end_src

* Kernel and Firmware

SystemD initial setup
#+begin_src bash
systemd-machine-id-setup
systemd-firstboot --prompt
systemctl preset-all --preset-mode=enable-only
#+end_src

Install installkernel script
#+begin_src bash
echo 'sys-kernel/installkernel dracut systemd-boot' >> ./package.use
echo 'sys-apps/systemd boot' >> ./package.use
emerge -j5 gentoo-kernel-bin
bootctl install
#+end_src

Get kernel
#+begin_src bash
> /etc/kernel/cmdline
> /etc/fstab
#+end_src

* Network Stack

Install NetworkManager
#+begin_src bash
echo '*/* -gtk-doc' >> ./package.use
echo 'net-misc/networkmanager -ppp -wext -modemmanager iwd' >> ./package.use
emerge -j5 networkmanager
systemctl enable NetworkManager
#+end_src

* Initial System Configuration

Set root password
#+begin_src bash
passwd
#+end_src

* Reboot :-)

#+begin_src bash
exit
reboot
#+end_src
